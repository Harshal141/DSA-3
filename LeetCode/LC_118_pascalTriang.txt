// simple one

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans = {{1},{1,1}};
        if(numRows == 1)return {{1}};
        if(numRows == 2)return {{1},{1,1}};
        for(int i=2;i<numRows;i++){
            vector<int> temp = {1};
            for(int j = 0;j<i-1;j++){
                // cout << i << " " << ans[i-1][j] << ans[i-1][j+1] << endl;
                temp.push_back(ans[i-1][j]+ans[i-1][j+1]);
            }
            temp.push_back(1);
            ans.push_back(temp);
        }
        return ans;
    }
};

// using dp
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans(numRows);
        for(int i=0;i<numRows;i++){
            ans[i].resize(i+1,1);
            for(int j=0;j<i-1;j++){
                ans[i][j+1]=ans[i-1][j]+ans[i-1][j+1];
            }
        }
        return ans;
    }
};